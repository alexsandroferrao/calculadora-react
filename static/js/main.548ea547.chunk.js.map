{"version":3,"sources":["Calculadora.service.js","Calculadora.js","reportWebVitals.js","index.js"],"names":["CalculadoraService","primeiroNumero","segundoNumero","operacao","resultado","Math","round","Calculadora","calcular","SOMA","SUBTRACAO","MULTIPLICACAO","DIVISAO","useState","telaResultado","setTelaResultado","setPrimeiroNumero","setSegundoNumero","setOperacao","adicionarNumero","numero","definirOperacao","Jumbotron","style","background","backgroundColor","padding","margin","width","Container","Row","Col","xs","Button","variant","onClick","Form","Control","type","name","className","readOnly","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAiCeA,MAjCf,WA8BE,MAAO,CAxBP,SAAkBC,EAAgBC,EAAeC,GAC/C,IAAIC,EAEJ,OAAQD,GACN,IATS,IAUPC,EAAYH,EAAiBC,EAC7B,MACF,IAXc,IAYZE,EAAYH,EAAiBC,EAC7B,MACF,IAbkB,IAchBE,EAAYH,EAAiBC,EAC7B,MACF,IAfY,IAgBVE,EAAYC,KAAKC,MAAML,EAAiBC,GACxC,MACF,QACEE,EAAY,EAIhB,OAAOA,GA1BI,IACK,IACI,IACN,M,OCuKHG,MAtKf,WACE,MACEP,IADF,mBAAOQ,EAAP,KAAiBC,EAAjB,KAAuBC,EAAvB,KAAkCC,EAAlC,KAAiDC,EAAjD,KAGA,EAA0CC,mBAAS,KAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAA4CF,mBAAS,KAArD,mBAAOZ,EAAP,KAAuBe,EAAvB,KACA,EAA0CH,mBAAS,MAAnD,mBAAOX,EAAP,KAAsBe,EAAtB,KACA,EAAgCJ,mBAAS,MAAzC,mBAAOV,EAAP,KAAiBe,EAAjB,KAEA,SAASC,EAAgBC,GACN,OAAbjB,EAEFa,EAAkBI,GAElBH,EAAiBG,GAGnBL,EAAiBK,GAGnB,SAASC,EAAgBlB,GACvBe,EAAYf,GACZY,EAAiBZ,GAenB,OACE,cAACmB,EAAA,EAAD,CACEC,MAAO,CACLC,WAAY,yBACZC,gBAAiB,OACjBC,QAAS,MACTC,OAAQ,MACRC,MAAO,SANX,SASE,eAACC,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,GAAG,IAAR,SACE,cAACC,EAAA,EAAD,CAAQC,QAAQ,SAASC,QAzBnC,WACEnB,EAAkB,KAClBC,EAAiB,MACjBC,EAAY,MACZH,EAAiB,IAqBT,iBAIF,cAACgB,EAAA,EAAD,CAAKC,GAAG,IAAR,SACE,cAACI,EAAA,EAAKC,QAAN,CACEC,KAAK,OACL,cAAY,kBACZC,KAAK,kBACLC,UAAU,aACVC,SAAS,WACTC,MAAO5B,SAKb,eAACgB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAACE,EAAA,EAAD,CAAQC,QAAQ,QAAQC,QAAS,kBAAMhB,EAAgB,IAAvD,iBAIF,cAACY,EAAA,EAAD,UACE,cAACE,EAAA,EAAD,CAAQC,QAAQ,QAAQC,QAAS,kBAAMhB,EAAgB,IAAvD,iBAIF,cAACY,EAAA,EAAD,UACE,cAACE,EAAA,EAAD,CAAQC,QAAQ,QAAQC,QAAS,kBAAMhB,EAAgB,IAAvD,iBAIF,cAACY,EAAA,EAAD,UACE,cAACE,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAAS,kBAAMd,EAAgBT,IAAzD,oBAMJ,eAACkB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAACE,EAAA,EAAD,CAAQC,QAAQ,QAAQC,QAAS,kBAAMhB,EAAgB,IAAvD,iBAIF,cAACY,EAAA,EAAD,UACE,cAACE,EAAA,EAAD,CAAQC,QAAQ,QAAQC,QAAS,kBAAMhB,EAAgB,IAAvD,iBAIF,cAACY,EAAA,EAAD,UACE,cAACE,EAAA,EAAD,CAAQC,QAAQ,QAAQC,QAAS,kBAAMhB,EAAgB,IAAvD,iBAIF,cAACY,EAAA,EAAD,UACE,cAACE,EAAA,EAAD,CACEC,QAAQ,UACRC,QAAS,kBAAMd,EAAgBV,IAFjC,oBASJ,eAACmB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAACE,EAAA,EAAD,CAAQC,QAAQ,QAAQC,QAAS,kBAAMhB,EAAgB,IAAvD,iBAIF,cAACY,EAAA,EAAD,UACE,cAACE,EAAA,EAAD,CAAQC,QAAQ,QAAQC,QAAS,kBAAMhB,EAAgB,IAAvD,iBAIF,cAACY,EAAA,EAAD,UACE,cAACE,EAAA,EAAD,CAAQC,QAAQ,QAAQC,QAAS,kBAAMhB,EAAgB,IAAvD,iBAIF,cAACY,EAAA,EAAD,UACE,cAACE,EAAA,EAAD,CACEC,QAAQ,UACRC,QAAS,kBAAMd,EAAgBX,IAFjC,oBASJ,eAACoB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAACE,EAAA,EAAD,CAAQC,QAAQ,QAAQC,QAAS,kBAAMhB,EAAgB,IAAvD,iBAIF,cAACY,EAAA,EAAD,UACE,cAACE,EAAA,EAAD,CAAQC,QAAQ,QAAQC,QAAS,kBAAMhB,EAAgB,MAAvD,iBAIF,cAACY,EAAA,EAAD,UACE,cAACE,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAzHpC,WACE,IAAI/B,EAAYI,EAASP,EAAgBC,EAAeC,GACxDY,EAAiBX,IAuHT,iBAEF,cAAC2B,EAAA,EAAD,UACE,cAACE,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAAS,kBAAMd,EAAgBZ,IAAzD,0BCrJGkC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAE1Bb,M","file":"static/js/main.548ea547.chunk.js","sourcesContent":["function CalculadoraService() {\n  const SOMA = \"+\";\n  const SUBTRACAO = \"-\";\n  const MULTIPLICACAO = \"*\";\n  const DIVISAO = \"/\";\n\n  function calcular(primeiroNumero, segundoNumero, operacao) {\n    let resultado;\n\n    switch (operacao) {\n      case SOMA:\n        resultado = primeiroNumero + segundoNumero;\n        break;\n      case SUBTRACAO:\n        resultado = primeiroNumero - segundoNumero;\n        break;\n      case MULTIPLICACAO:\n        resultado = primeiroNumero * segundoNumero;\n        break;\n      case DIVISAO:\n        resultado = Math.round(primeiroNumero / segundoNumero);\n        break;\n      default:\n        resultado = 0;\n        break;\n    }\n\n    return resultado;\n  }\n\n  return [calcular, SOMA, SUBTRACAO, MULTIPLICACAO, DIVISAO];\n}\n\nexport default CalculadoraService;\n","import \"./Calculadora.css\";\nimport { Jumbotron, Container, Row, Col, Button, Form } from \"react-bootstrap\";\nimport React, { useState } from \"react\";\nimport CalculadoraService from \"./Calculadora.service\";\n\nfunction Calculadora() {\n  const [calcular, SOMA, SUBTRACAO, MULTIPLICACAO, DIVISAO] =\n    CalculadoraService();\n\n  const [telaResultado, setTelaResultado] = useState('0');\n  const [primeiroNumero, setPrimeiroNumero] = useState('0');\n  const [segundoNumero, setSegundoNumero] = useState(null);\n  const [operacao, setOperacao] = useState(null);\n\n  function adicionarNumero(numero) {\n    if (operacao === null) {\n\n      setPrimeiroNumero(numero);\n    } else{\n      setSegundoNumero(numero)\n    }\n   \n    setTelaResultado(numero);\n  }\n\n  function definirOperacao(operacao) {\n    setOperacao(operacao);\n    setTelaResultado(operacao);\n  }\n\n  function limpaTela() {\n    setPrimeiroNumero('0');\n    setSegundoNumero(null);\n    setOperacao(null);\n    setTelaResultado(0);\n  }\n\n  function realizaCalculo(){\n    let resultado = calcular(primeiroNumero, segundoNumero, operacao);\n    setTelaResultado(resultado);\n  }\n\n  return (\n    <Jumbotron\n      style={{\n        background: \"transparent !important\",\n        backgroundColor: \"blue\",\n        padding: \"5px\",\n        margin: \"5px\",\n        width: \"400px\",\n      }}\n    >\n      <Container>\n        <Row>\n          <Col xs=\"3\">\n            <Button variant=\"danger\" onClick={limpaTela}>\n              C\n            </Button>\n          </Col>\n          <Col xs=\"9\">\n            <Form.Control\n              type=\"text\"\n              data-testid=\"visorResultados\"\n              name=\"visorResultados\"\n              className=\"text-right\"\n              readOnly=\"readonly\"\n              value={telaResultado}\n            />\n          </Col>\n        </Row>\n\n        <Row>\n          <Col>\n            <Button variant=\"light\" onClick={() => adicionarNumero(7)}>\n              7\n            </Button>\n          </Col>\n          <Col>\n            <Button variant=\"light\" onClick={() => adicionarNumero(8)}>\n              8\n            </Button>\n          </Col>\n          <Col>\n            <Button variant=\"light\" onClick={() => adicionarNumero(9)}>\n              9\n            </Button>\n          </Col>\n          <Col>\n            <Button variant=\"warning\" onClick={() => definirOperacao(DIVISAO)}>\n              /\n            </Button>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col>\n            <Button variant=\"light\" onClick={() => adicionarNumero(4)}>\n              4\n            </Button>\n          </Col>\n          <Col>\n            <Button variant=\"light\" onClick={() => adicionarNumero(5)}>\n              5\n            </Button>\n          </Col>\n          <Col>\n            <Button variant=\"light\" onClick={() => adicionarNumero(6)}>\n              6\n            </Button>\n          </Col>\n          <Col>\n            <Button\n              variant=\"warning\"\n              onClick={() => definirOperacao(MULTIPLICACAO)}\n            >\n              *\n            </Button>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col>\n            <Button variant=\"light\" onClick={() => adicionarNumero(1)}>\n              1\n            </Button>\n          </Col>\n          <Col>\n            <Button variant=\"light\" onClick={() => adicionarNumero(2)}>\n              2\n            </Button>\n          </Col>\n          <Col>\n            <Button variant=\"light\" onClick={() => adicionarNumero(3)}>\n              3\n            </Button>\n          </Col>\n          <Col>\n            <Button\n              variant=\"warning\"\n              onClick={() => definirOperacao(SUBTRACAO)}\n            >\n              -\n            </Button>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col>\n            <Button variant=\"light\" onClick={() => adicionarNumero(0)}>\n              0\n            </Button>\n          </Col>\n          <Col>\n            <Button variant=\"light\" onClick={() => adicionarNumero(\".\")}>\n              .\n            </Button>\n          </Col>\n          <Col>\n            <Button variant=\"success\" onClick={realizaCalculo}>=</Button>\n          </Col>\n          <Col>\n            <Button variant=\"warning\" onClick={() => definirOperacao(SOMA)}>\n              +\n            </Button>\n          </Col>\n        </Row>\n      </Container>\n    </Jumbotron>\n  );\n}\n\nexport default Calculadora;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Calculadora from './Calculadora';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Calculadora />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}